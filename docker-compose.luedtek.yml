services:
  caddy:
    ports:
      - 4201:80
    networks:
      - wan
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tracecat.tls=true"
      - "traefik.http.routers.tracecat.entrypoints=websecure"
      - "traefik.http.routers.tracecat.tls.certresolver=dns-cloudflare"
      - "traefik.http.routers.tracecat.rule=Host(`tracecat.${ROOT_DOMAIN}`)"
      - "traefik.http.routers.tracecat.middlewares=no-auth@docker"
      - "traefik.http.routers.tracecat.service=tracecat"
      - "traefik.http.services.tracecat.loadbalancer.server.scheme=http"
      - "traefik.http.services.tracecat.loadbalancer.server.port=4201"

  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - ./tracecat:/app/tracecat
    environment:
      DUMP_TRACECAT_RESULT: 0

  worker:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - ./tracecat:/app/tracecat
    environment:
      DUMP_TRACECAT_RESULT: 0

  ui:
    # rebuilding to ensure my clerk publishable key is attached during build. This is broken in the image.
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
        NEXT_PUBLIC_APP_ENV: ${NEXT_PUBLIC_APP_ENV}
        NEXT_PUBLIC_APP_URL: ${NEXT_PUBLIC_APP_URL}
        NEXT_PUBLIC_AUTH_TYPES: ${TRACECAT__AUTH_TYPES}
        NEXT_SERVER_API_URL: ${NEXT_SERVER_API_URL}
        NODE_ENV: ${NODE_ENV}
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/.next:/app/.next
      - ./frontend/node_modules:/app/node_modules

  temporal_ui:
    image: temporalio/ui:${TEMPORAL__UI_VERSION}
    container_name: temporal_ui
    ports:
      - 4202:8080
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=https://temporal.${ROOT_DOMAIN}
    depends_on:
      - temporal
    networks:
      - wan
      - temporal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.temporal.tls=true"
      - "traefik.http.routers.temporal.entrypoints=websecure"
      - "traefik.http.routers.temporal.tls.certresolver=dns-cloudflare"
      - "traefik.http.routers.temporal.rule=Host(`temporal.${ROOT_DOMAIN}`)"
      - "traefik.http.routers.temporal.middlewares=authelia-main@redis"
      - "traefik.http.routers.temporal.service=temporal"
      - "traefik.http.services.temporal.loadbalancer.server.scheme=http"
      - "traefik.http.services.temporal.loadbalancer.server.port=4202"

networks:
  wan:
  temporal: